<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFwAAAAcCAYAAADst9g0AAAABGdBTUEAALGPC/xhBQAABKNJREFUaEPt
        msFu00wUhfMIfQQeoY+QR+gOSBd/1wiJCGLU/kiJ2x27bNihmhSxYAVs2VCxhKZBLCBtkMqKbfsG4Rxz
        rzueuWO7Iex8pCPHM9eT688z13bazk01OJr3k6P5En7zaHL2Xz+72JCuVutQP73YSIbnD5L0fDOZzMcC
        23cL/29F0IPhYjQYLS6T0WLJ7cPx2W1AvzKA5x5M5pdyeKubCLN5R0G7bgI9+3+2me2efICzbO9kS4Zs
        ZWmQLrrJ6PzCB+26Dnq2+7kL0EvxZZbO2jITE0pIakH2XQXdA879VIZv5SsZLo4twJZj0APg7SyP63H6
        Y4uzvKlZ65NX+dNLAd0AXjvLl8tlF34Hf4V/eWbbRwnNhf2n8Fz6Lb+TUMZy3AunzzXHfiahptDP491j
        7kpXSWjP4E9OnJp5sv36uHRntrG/fXp5sH26NN2bXqW92aaEB3Khm8BrZjmSeS/J0YTABH13JZYXRwHq
        yfjO8oEh2bdi3YvwXsIDOXE6zmvpKoS2Z9JHx3J6IuGdzkFvtmOCpmtgqxR6BDg87UtoICSjJxWcjC8m
        LrG0OdtcIYYny9hi1qvQ5l7o+9JcCG1cSezLV4J+lu5CaPsofdzmE6NS+73Tt38DW0XoFvDD3ZMrPi5K
        WCBJln4qTVEhxgVee3KIiQKn0K6lqVgVKrTpBeGWK0u/t3ShsV/5HSWxnKwDtsoHTtjje9PbGC84IRUS
        1RkejVEhZt3AdXYGZQVtejHycoCtxpbydNpL9xpTZjkBbELKdqc7EtZYLnCFrfeH/d50LGElIVF3afPm
        EyxvFfrWDfy19JdKBfbvSzsng94/mBvbPuVBIuy7NZzncl2vfQXlRGHzRrfCM7QC92GrJawkJMjl6j+h
        8ESD5Lkv/TH74FYFrk8nxazF57vSRvtlxZ00as788lOQC6MEm7N0ReAx2PAXCTPF5GAmrku5SFxCGOMC
        Jyzf/nJfFbjmUALGOGm3aj5zsx5vOdaf1XiwPe2bsFcFjptjBDYcf1LxhQQ5mxQGrXX0n5cUfNZyUuVS
        WfGFfq5aTqDwCYy1NYC9InDeaGPP9Omd2S0JaywkqrMlTxjbdQMPbpqMlTbOTB7vW7+/yWOpjnV9gfJf
        +HzYAjw5+t74xlkFG64sJzExUUk4B4btuoFr6ShKhNXmyumvfEulEBOWLL6UBLAL4Hxlr4deAxtuXk5U
        SNJ9q8xPHlsX+NpffLCN3hhVaNfjah8DEaPffx3L1+785SQKvBp6PezqcoJkuOyYmG89cULPTx5b9yJw
        ax1XzDzZt2J1DNotJ/rox1JmriC06xvoL9lnrXbHtr6j/FJHuNXA/0CXH7hGTc0fuOQrokIyXHZ+gjSX
        Lmus/2hY9+OVC5DjWjE0+wirAIvPpXtGTBJD83jmw7H8nPQih6XHnOUB8Pny0fNv9wbD8y/WT7amh4tj
        +YpWvvhmWQf8ptAR90KGb2XpcO/kZx1wugl0lJSf/LOdDN3KEiB3Cfpw7/MxoG9ZsNUx6ATdpHa3MuT/
        Cc23C70FvSY9fnm2NZh8f2HCn8zH+T8LtaD/jVz4/Lc3aW7VSJ3Ob5fWcqy3dedbAAAAAElFTkSuQmCC
</value>
  </data>
</root>